En Visual Studio code se necesita el extesion pack for Java, Marven for java y extension de SpringBoot 


Configuración de la base de datos remota:

Define la configuración de la base de datos en el archivo application.properties o application.yml. Debes especificar la URL, nombre de usuario y contraseña de la base de datos remota.
Asegúrate de que la base de datos remota esté accesible desde tu aplicación Spring Boot.
spring.datasource.url=jdbc:mysql://http://sql8006.site4now.net:3306/db_a937a5_123
spring.datasource.username=db_a937a5_123_admin
spring.datasource.password=*PicoroGohan74_
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update



Dependencias de Spring Boot:

Asegúrate de agregar las dependencias adecuadas para trabajar con la base de datos remota en tu archivo pom.xml. Por ejemplo, si estás utilizando MySQL, puedes agregar la dependencia spring-boot-starter-data-jpa.
<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>2.7.2</version>
	</dependency>


Controladores:

Crea controladores REST para exponer las API CRUD a través de HTTP. Utiliza las anotaciones @RestController, @RequestMapping, y otras anotaciones de Spring para definir las rutas y métodos HTTP correspondientes.


Agregar la dependencia de CORS:
Asegúrate de que tu proyecto incluya la dependencia spring-boot-starter-web en el archivo pom.xml. Spring Boot proporciona soporte para CORS de forma nativa.
<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
</dependency>


La clase Producto.java y CineDB son ejemplos de como manejar las tablas de la base de datos, al igual que el index.html y app,js son ejemplos (Lo pueden eliminar)

